args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-11/', width='11')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'gru', 'decoder': 'attention', 'embedding_size': 160, 'keep_prob': 0.45, 'memory_size': 25, 'num_units': 160, 'use_embedding': True, 'epoches': 15, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.002, 'decay_rate': 0.9, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8549
model/ifttt/width-11/dataset-w-11.pkl
load raw and dump to file
numArcLayers: 5
1 1 11
layer 1 incoming edges: 111
choose: News & information
split the incoming edges: 111 13 98
the value pair of raw_data is: 492
split the outgoings edges: 443 60 386 446
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
1 2 11
layer 1 incoming edges: 98
choose: Photo & video
split the incoming edges: 98 9 89
the value pair of raw_data is: 492
split the outgoings edges: 386 35 351 386
add node: MDDNode(1,u_8) MDDNode(1,u_9), remove node: MDDNode(1,u_7)
1 3 11
layer 1 incoming edges: 89
choose: Others
split the incoming edges: 89 7 82
the value pair of raw_data is: 492
split the outgoings edges: 351 21 335 356
add node: MDDNode(1,u_10) MDDNode(1,u_11), remove node: MDDNode(1,u_9)
1 4 11
layer 1 incoming edges: 82
choose: Social networks
split the incoming edges: 82 7 75
the value pair of raw_data is: 492
split the outgoings edges: 335 55 280 335
add node: MDDNode(1,u_12) MDDNode(1,u_13), remove node: MDDNode(1,u_11)
1 5 11
layer 1 incoming edges: 75
choose: Shopping
split the incoming edges: 75 6 69
the value pair of raw_data is: 492
split the outgoings edges: 280 23 257 280
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_13)
1 6 11
layer 1 incoming edges: 69
choose: Bookmarking
split the incoming edges: 69 6 63
the value pair of raw_data is: 492
split the outgoings edges: 257 12 245 257
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_15)
1 7 11
layer 1 incoming edges: 63
choose: Security & monitoring systems
split the incoming edges: 63 5 58
the value pair of raw_data is: 492
split the outgoings edges: 245 18 228 246
add node: MDDNode(1,u_18) MDDNode(1,u_19), remove node: MDDNode(1,u_17)
1 8 11
layer 1 incoming edges: 58
choose: Health & fitness
split the incoming edges: 58 4 54
the value pair of raw_data is: 492
split the outgoings edges: 228 26 203 229
add node: MDDNode(1,u_20) MDDNode(1,u_21), remove node: MDDNode(1,u_19)
1 9 11
layer 1 incoming edges: 54
choose: Finance & payments
split the incoming edges: 54 4 50
the value pair of raw_data is: 492
split the outgoings edges: 203 17 186 203
add node: MDDNode(1,u_22) MDDNode(1,u_23), remove node: MDDNode(1,u_21)
1 10 11
layer 1 incoming edges: 50
choose: Mobile devices & accessories
split the incoming edges: 50 4 46
the value pair of raw_data is: 492
split the outgoings edges: 186 12 174 186
add node: MDDNode(1,u_24) MDDNode(1,u_25), remove node: MDDNode(1,u_23)
dump to the pickle
the graph width list : [1, 11, 1, 1, 1, 1]
it 1 train 0.3328   train_h 0.1668   train_v 0.9087   dev 0.2903   dev_h 0.1774   dev_v 0.9021   new_test 0.3583   new_test_h 0.1604   new_test_v 0.9232   save acc: 0.3583 T: 2020-01-10T08:54 
it 2 train 0.4224   train_h 0.1444   train_v 0.9248   dev 0.3373   dev_h 0.1657   dev_v 0.9197   new_test 0.4468   new_test_h 0.1383   new_test_v 0.9369   save acc: 0.4468 T: 2020-01-10T08:57 
it 3 train 0.4696   train_h 0.1326   train_v 0.9267   dev 0.3426   dev_h 0.1644   dev_v 0.9137   new_test 0.4586   new_test_h 0.1354   new_test_v 0.9377   save acc: 0.4586 T: 2020-01-10T09:01 
it 4 train 0.5075   train_h 0.1231   train_v 0.9306   dev 0.3520   dev_h 0.1620   dev_v 0.9166   new_test 0.4606   new_test_h 0.1349   new_test_v 0.9284   save acc: 0.4606 T: 2020-01-10T09:04 
it 5 train 0.5384   train_h 0.1154   train_v 0.9362   dev 0.3496   dev_h 0.1626   dev_v 0.9142   new_test 0.4707   new_test_h 0.1323   new_test_v 0.9422   
it 6 train 0.5614   train_h 0.1096   train_v 0.9373   dev 0.3457   dev_h 0.1636   dev_v 0.9072   new_test 0.4723   new_test_h 0.1319   new_test_v 0.9406   
it 7 train 0.5790   train_h 0.1052   train_v 0.9429   dev 0.3529   dev_h 0.1618   dev_v 0.9147   new_test 0.4699   new_test_h 0.1325   new_test_v 0.9357   save acc: 0.4699 T: 2020-01-10T09:13 
it 8 train 0.5950   train_h 0.1012   train_v 0.9442   dev 0.3459   dev_h 0.1635   dev_v 0.9108   new_test 0.4638   new_test_h 0.1340   new_test_v 0.9329   
it 9 train 0.6076   train_h 0.0981   train_v 0.9455   dev 0.3450   dev_h 0.1638   dev_v 0.9163   new_test 0.4614   new_test_h 0.1347   new_test_v 0.9329   
it 10 train 0.6179   train_h 0.0955   train_v 0.9465   dev 0.3476   dev_h 0.1631   dev_v 0.9127   new_test 0.4691   new_test_h 0.1327   new_test_v 0.9325   
it 11 train 0.6240   train_h 0.0940   train_v 0.9475   dev 0.3419   dev_h 0.1645   dev_v 0.9110   new_test 0.4687   new_test_h 0.1328   new_test_v 0.9345   
it 12 train 0.6301   train_h 0.0925   train_v 0.9491   dev 0.3450   dev_h 0.1638   dev_v 0.9079   new_test 0.4674   new_test_h 0.1331   new_test_v 0.9333   
it 13 train 0.6354   train_h 0.0912   train_v 0.9502   dev 0.3450   dev_h 0.1638   dev_v 0.9163   new_test 0.4634   new_test_h 0.1341   new_test_v 0.9361   
it 14 train 0.6394   train_h 0.0901   train_v 0.9505   dev 0.3443   dev_h 0.1639   dev_v 0.9115   new_test 0.4638   new_test_h 0.1340   new_test_v 0.9329   
it 15 train 0.6421   train_h 0.0895   train_v 0.9511   dev 0.3426   dev_h 0.1644   dev_v 0.9098   new_test 0.4666   new_test_h 0.1333   new_test_v 0.9341   
it 16 train 0.6445   train_h 0.0889   train_v 0.9504   dev 0.3414   dev_h 0.1647   dev_v 0.9163   new_test 0.4654   new_test_h 0.1336   new_test_v 0.9341   
