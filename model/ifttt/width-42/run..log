args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-42/', width='42')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'gru', 'decoder': 'attention', 'embedding_size': 160, 'keep_prob': 0.45, 'memory_size': 25, 'num_units': 160, 'use_embedding': True, 'epoches': 15, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.002, 'decay_rate': 0.9, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8549
model/ifttt/width-42/dataset-w-42.pkl
load raw and dump to file
numArcLayers: 5
1 1 42
layer 1 incoming edges: 111
choose: News & information
split the incoming edges: 111 13 98
the value pair of raw_data is: 492
split the outgoings edges: 443 60 386 446
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
1 2 42
layer 1 incoming edges: 98
choose: Photo & video
split the incoming edges: 98 9 89
the value pair of raw_data is: 492
split the outgoings edges: 386 35 351 386
add node: MDDNode(1,u_8) MDDNode(1,u_9), remove node: MDDNode(1,u_7)
1 3 42
layer 1 incoming edges: 89
choose: Social networks
split the incoming edges: 89 7 82
the value pair of raw_data is: 492
split the outgoings edges: 351 55 296 351
add node: MDDNode(1,u_10) MDDNode(1,u_11), remove node: MDDNode(1,u_9)
1 4 42
layer 1 incoming edges: 82
choose: Others
split the incoming edges: 82 7 75
the value pair of raw_data is: 492
split the outgoings edges: 296 21 280 301
add node: MDDNode(1,u_12) MDDNode(1,u_13), remove node: MDDNode(1,u_11)
1 5 42
layer 1 incoming edges: 75
choose: Shopping
split the incoming edges: 75 6 69
the value pair of raw_data is: 492
split the outgoings edges: 280 23 257 280
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_13)
1 6 42
layer 1 incoming edges: 69
choose: Bookmarking
split the incoming edges: 69 6 63
the value pair of raw_data is: 492
split the outgoings edges: 257 12 245 257
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_15)
1 7 42
layer 1 incoming edges: 63
choose: Security & monitoring systems
split the incoming edges: 63 5 58
the value pair of raw_data is: 492
split the outgoings edges: 245 18 228 246
add node: MDDNode(1,u_18) MDDNode(1,u_19), remove node: MDDNode(1,u_17)
1 8 42
layer 1 incoming edges: 58
choose: Finance & payments
split the incoming edges: 58 4 54
the value pair of raw_data is: 492
split the outgoings edges: 228 17 211 228
add node: MDDNode(1,u_20) MDDNode(1,u_21), remove node: MDDNode(1,u_19)
1 9 42
layer 1 incoming edges: 54
choose: Mobile devices & accessories
split the incoming edges: 54 4 50
the value pair of raw_data is: 492
split the outgoings edges: 211 12 199 211
add node: MDDNode(1,u_22) MDDNode(1,u_23), remove node: MDDNode(1,u_21)
1 10 42
layer 1 incoming edges: 50
choose: Health & fitness
split the incoming edges: 50 4 46
the value pair of raw_data is: 492
split the outgoings edges: 199 26 174 200
add node: MDDNode(1,u_24) MDDNode(1,u_25), remove node: MDDNode(1,u_23)
1 11 42
layer 1 incoming edges: 46
choose: Power monitoring & management
split the incoming edges: 46 3 43
the value pair of raw_data is: 492
split the outgoings edges: 174 11 165 176
add node: MDDNode(1,u_26) MDDNode(1,u_27), remove node: MDDNode(1,u_25)
1 12 42
layer 1 incoming edges: 43
choose: Weather
split the incoming edges: 43 3 40
the value pair of raw_data is: 492
split the outgoings edges: 165 30 139 169
add node: MDDNode(1,u_28) MDDNode(1,u_29), remove node: MDDNode(1,u_27)
1 13 42
layer 1 incoming edges: 40
choose: Smart hubs & systems
split the incoming edges: 40 3 37
the value pair of raw_data is: 492
split the outgoings edges: 139 20 123 143
add node: MDDNode(1,u_30) MDDNode(1,u_31), remove node: MDDNode(1,u_29)
1 14 42
layer 1 incoming edges: 37
choose: Email
split the incoming edges: 37 3 34
the value pair of raw_data is: 492
split the outgoings edges: 123 10 113 123
add node: MDDNode(1,u_32) MDDNode(1,u_33), remove node: MDDNode(1,u_31)
1 15 42
layer 1 incoming edges: 34
choose: Blogging
split the incoming edges: 34 3 31
the value pair of raw_data is: 492
split the outgoings edges: 113 13 100 113
add node: MDDNode(1,u_34) MDDNode(1,u_35), remove node: MDDNode(1,u_33)
1 16 42
layer 1 incoming edges: 31
choose: Notifications
split the incoming edges: 31 3 28
the value pair of raw_data is: 492
split the outgoings edges: 100 4 96 100
add node: MDDNode(1,u_36) MDDNode(1,u_37), remove node: MDDNode(1,u_35)
1 17 42
layer 1 incoming edges: 28
choose: Environment control & monitoring
split the incoming edges: 28 3 25
the value pair of raw_data is: 492
split the outgoings edges: 96 9 87 96
add node: MDDNode(1,u_38) MDDNode(1,u_39), remove node: MDDNode(1,u_37)
1 18 42
layer 1 incoming edges: 25
choose: Gardening
split the incoming edges: 25 3 22
the value pair of raw_data is: 492
split the outgoings edges: 87 9 78 87
add node: MDDNode(1,u_40) MDDNode(1,u_41), remove node: MDDNode(1,u_39)
1 19 42
layer 1 incoming edges: 22
choose: DIY electronics
split the incoming edges: 22 2 20
the value pair of raw_data is: 492
split the outgoings edges: 78 2 76 78
add node: MDDNode(1,u_42) MDDNode(1,u_43), remove node: MDDNode(1,u_41)
1 20 42
layer 1 incoming edges: 20
choose: Appliances
split the incoming edges: 20 2 18
the value pair of raw_data is: 492
split the outgoings edges: 76 2 74 76
add node: MDDNode(1,u_44) MDDNode(1,u_45), remove node: MDDNode(1,u_43)
1 21 42
layer 1 incoming edges: 18
choose: Task management & to-dos
split the incoming edges: 18 2 16
the value pair of raw_data is: 492
split the outgoings edges: 74 11 63 74
add node: MDDNode(1,u_46) MDDNode(1,u_47), remove node: MDDNode(1,u_45)
1 22 42
layer 1 incoming edges: 16
choose: Connected car
split the incoming edges: 16 2 14
the value pair of raw_data is: 492
split the outgoings edges: 63 10 53 63
add node: MDDNode(1,u_48) MDDNode(1,u_49), remove node: MDDNode(1,u_47)
1 23 42
layer 1 incoming edges: 14
choose: Calendars & scheduling
split the incoming edges: 14 2 12
the value pair of raw_data is: 492
split the outgoings edges: 53 8 45 53
add node: MDDNode(1,u_50) MDDNode(1,u_51), remove node: MDDNode(1,u_49)
1 24 42
layer 1 incoming edges: 13
only split: [MDDArc('espn', MDDNode(0, 's'), MDDNode(1, 'u_6'))]
split the incoming edges: 13 1 12
the value pair of raw_data is: 492
split the outgoings edges: 60 6 54 60
add node: MDDNode(1,u_52) MDDNode(1,u_53), remove node: MDDNode(1,u_6)
1 25 42
layer 1 incoming edges: 12
choose: Contacts
split the incoming edges: 12 2 10
the value pair of raw_data is: 492
split the outgoings edges: 45 3 42 45
add node: MDDNode(1,u_54) MDDNode(1,u_55), remove node: MDDNode(1,u_51)
1 26 42
layer 1 incoming edges: 12
only split: [MDDArc('feedly', MDDNode(0, 's'), MDDNode(1, 'u_53'))]
split the incoming edges: 12 1 11
the value pair of raw_data is: 492
split the outgoings edges: 54 4 50 54
add node: MDDNode(1,u_56) MDDNode(1,u_57), remove node: MDDNode(1,u_53)
1 27 42
layer 1 incoming edges: 11
only split: [MDDArc('space', MDDNode(0, 's'), MDDNode(1, 'u_57'))]
split the incoming edges: 11 1 10
the value pair of raw_data is: 492
split the outgoings edges: 50 8 42 50
add node: MDDNode(1,u_58) MDDNode(1,u_59), remove node: MDDNode(1,u_57)
1 28 42
layer 1 incoming edges: 10
choose: Communication
split the incoming edges: 10 2 8
the value pair of raw_data is: 492
split the outgoings edges: 42 12 30 42
add node: MDDNode(1,u_60) MDDNode(1,u_61), remove node: MDDNode(1,u_55)
1 29 42
layer 1 incoming edges: 10
only split: [MDDArc('sports_illustrated', MDDNode(0, 's'), MDDNode(1, 'u_59'))]
split the incoming edges: 10 1 9
the value pair of raw_data is: 492
split the outgoings edges: 42 2 42 44
add node: MDDNode(1,u_62) MDDNode(1,u_63), remove node: MDDNode(1,u_59)
1 30 42
layer 1 incoming edges: 9
only split: [MDDArc('android_photos', MDDNode(0, 's'), MDDNode(1, 'u_8'))]
split the incoming edges: 9 1 8
the value pair of raw_data is: 492
split the outgoings edges: 35 3 35 38
add node: MDDNode(1,u_64) MDDNode(1,u_65), remove node: MDDNode(1,u_8)
1 31 42
layer 1 incoming edges: 9
only split: [MDDArc('feed', MDDNode(0, 's'), MDDNode(1, 'u_63'))]
split the incoming edges: 9 1 8
the value pair of raw_data is: 492
split the outgoings edges: 42 2 40 42
add node: MDDNode(1,u_66) MDDNode(1,u_67), remove node: MDDNode(1,u_63)
1 32 42
layer 1 incoming edges: 8
choose: Pet trackers
split the incoming edges: 8 1 7
the value pair of raw_data is: 492
split the outgoings edges: 30 8 22 30
add node: MDDNode(1,u_68) MDDNode(1,u_69), remove node: MDDNode(1,u_61)
1 33 42
layer 1 incoming edges: 8
only split: [MDDArc('dailymotion', MDDNode(0, 's'), MDDNode(1, 'u_65'))]
split the incoming edges: 8 1 7
the value pair of raw_data is: 492
split the outgoings edges: 35 3 33 36
add node: MDDNode(1,u_70) MDDNode(1,u_71), remove node: MDDNode(1,u_65)
1 34 42
layer 1 incoming edges: 8
only split: [MDDArc('newsblur', MDDNode(0, 's'), MDDNode(1, 'u_67'))]
split the incoming edges: 8 1 7
the value pair of raw_data is: 492
split the outgoings edges: 40 4 36 40
add node: MDDNode(1,u_72) MDDNode(1,u_73), remove node: MDDNode(1,u_67)
1 35 42
layer 1 incoming edges: 7
only split: [MDDArc('twitter', MDDNode(0, 's'), MDDNode(1, 'u_10'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 55 10 45 55
add node: MDDNode(1,u_74) MDDNode(1,u_75), remove node: MDDNode(1,u_10)
1 36 42
layer 1 incoming edges: 7
only split: [MDDArc('up_by_jawbone', MDDNode(0, 's'), MDDNode(1, 'u_12'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 21 13 8 21
add node: MDDNode(1,u_76) MDDNode(1,u_77), remove node: MDDNode(1,u_12)
1 37 42
layer 1 incoming edges: 7
choose: Cloud storage
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 22 2 20 22
add node: MDDNode(1,u_78) MDDNode(1,u_79), remove node: MDDNode(1,u_69)
1 38 42
layer 1 incoming edges: 7
only split: [MDDArc('flickr', MDDNode(0, 's'), MDDNode(1, 'u_71'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 33 5 28 33
add node: MDDNode(1,u_80) MDDNode(1,u_81), remove node: MDDNode(1,u_71)
1 39 42
layer 1 incoming edges: 7
only split: [MDDArc('instyle', MDDNode(0, 's'), MDDNode(1, 'u_73'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 36 2 36 38
add node: MDDNode(1,u_82) MDDNode(1,u_83), remove node: MDDNode(1,u_73)
1 40 42
layer 1 incoming edges: 6
only split: [MDDArc('slice', MDDNode(0, 's'), MDDNode(1, 'u_14'))]
split the incoming edges: 6 1 5
the value pair of raw_data is: 492
split the outgoings edges: 23 2 21 23
add node: MDDNode(1,u_84) MDDNode(1,u_85), remove node: MDDNode(1,u_14)
1 41 42
layer 1 incoming edges: 6
only split: [MDDArc('bitly', MDDNode(0, 's'), MDDNode(1, 'u_16'))]
split the incoming edges: 6 1 5
the value pair of raw_data is: 492
split the outgoings edges: 12 1 11 12
add node: MDDNode(1,u_86) MDDNode(1,u_87), remove node: MDDNode(1,u_16)
dump to the pickle
the graph width list : [1, 42, 1, 1, 1, 1]
it 1 train 0.3402   train_h 0.1650   train_v 0.9309   dev 0.2891   dev_h 0.1777   dev_v 0.9282   new_test 0.3639   new_test_h 0.1590   new_test_v 0.9329   save acc: 0.3639 T: 2020-01-10T09:23 
it 2 train 0.4281   train_h 0.1430   train_v 0.9430   dev 0.3334   dev_h 0.1666   dev_v 0.9366   new_test 0.4278   new_test_h 0.1430   new_test_v 0.9539   save acc: 0.4278 T: 2020-01-10T09:26 
it 3 train 0.4795   train_h 0.1301   train_v 0.9464   dev 0.3513   dev_h 0.1622   dev_v 0.9351   new_test 0.4493   new_test_h 0.1377   new_test_v 0.9547   save acc: 0.4493 T: 2020-01-10T09:29 
it 4 train 0.5197   train_h 0.1201   train_v 0.9481   dev 0.3452   dev_h 0.1637   dev_v 0.9320   new_test 0.4557   new_test_h 0.1361   new_test_v 0.9466   
it 5 train 0.5493   train_h 0.1127   train_v 0.9526   dev 0.3537   dev_h 0.1616   dev_v 0.9337   new_test 0.4577   new_test_h 0.1356   new_test_v 0.9458   save acc: 0.4577 T: 2020-01-10T09:35 
it 6 train 0.5734   train_h 0.1066   train_v 0.9551   dev 0.3484   dev_h 0.1629   dev_v 0.9402   new_test 0.4638   new_test_h 0.1340   new_test_v 0.9539   
it 7 train 0.5931   train_h 0.1017   train_v 0.9568   dev 0.3503   dev_h 0.1624   dev_v 0.9344   new_test 0.4743   new_test_h 0.1314   new_test_v 0.9519   
it 8 train 0.6077   train_h 0.0981   train_v 0.9577   dev 0.3481   dev_h 0.1630   dev_v 0.9296   new_test 0.4642   new_test_h 0.1339   new_test_v 0.9499   
it 9 train 0.6199   train_h 0.0950   train_v 0.9585   dev 0.3464   dev_h 0.1634   dev_v 0.9313   new_test 0.4695   new_test_h 0.1326   new_test_v 0.9490   
it 10 train 0.6285   train_h 0.0929   train_v 0.9597   dev 0.3479   dev_h 0.1630   dev_v 0.9296   new_test 0.4699   new_test_h 0.1325   new_test_v 0.9495   
it 11 train 0.6358   train_h 0.0911   train_v 0.9608   dev 0.3472   dev_h 0.1632   dev_v 0.9311   new_test 0.4691   new_test_h 0.1327   new_test_v 0.9503   
it 12 train 0.6421   train_h 0.0895   train_v 0.9631   dev 0.3472   dev_h 0.1632   dev_v 0.9335   new_test 0.4703   new_test_h 0.1324   new_test_v 0.9482   
it 13 train 0.6472   train_h 0.0882   train_v 0.9636   dev 0.3498   dev_h 0.1625   dev_v 0.9311   new_test 0.4670   new_test_h 0.1332   new_test_v 0.9486   
it 14 train 0.6498   train_h 0.0876   train_v 0.9612   dev 0.3464   dev_h 0.1634   dev_v 0.9303   new_test 0.4687   new_test_h 0.1328   new_test_v 0.9478   
it 15 train 0.6524   train_h 0.0869   train_v 0.9620   dev 0.3462   dev_h 0.1635   dev_v 0.9286   new_test 0.4679   new_test_h 0.1330   new_test_v 0.9442   
it 16 train 0.6550   train_h 0.0862   train_v 0.9616   dev 0.3421   dev_h 0.1645   dev_v 0.9277   new_test 0.4630   new_test_h 0.1342   new_test_v 0.9454   
