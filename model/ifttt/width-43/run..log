args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-43/', width='43')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'gru', 'decoder': 'attention', 'embedding_size': 160, 'keep_prob': 0.45, 'memory_size': 25, 'num_units': 160, 'use_embedding': True, 'epoches': 15, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.002, 'decay_rate': 0.9, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8549
model/ifttt/width-43/dataset-w-43.pkl
load raw and dump to file
numArcLayers: 5
1 1 43
layer 1 incoming edges: 111
choose: News & information
split the incoming edges: 111 13 98
the value pair of raw_data is: 492
split the outgoings edges: 443 60 386 446
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
1 2 43
layer 1 incoming edges: 98
choose: Photo & video
split the incoming edges: 98 9 89
the value pair of raw_data is: 492
split the outgoings edges: 386 35 351 386
add node: MDDNode(1,u_8) MDDNode(1,u_9), remove node: MDDNode(1,u_7)
1 3 43
layer 1 incoming edges: 89
choose: Social networks
split the incoming edges: 89 7 82
the value pair of raw_data is: 492
split the outgoings edges: 351 55 296 351
add node: MDDNode(1,u_10) MDDNode(1,u_11), remove node: MDDNode(1,u_9)
1 4 43
layer 1 incoming edges: 82
choose: Others
split the incoming edges: 82 7 75
the value pair of raw_data is: 492
split the outgoings edges: 296 21 280 301
add node: MDDNode(1,u_12) MDDNode(1,u_13), remove node: MDDNode(1,u_11)
1 5 43
layer 1 incoming edges: 75
choose: Bookmarking
split the incoming edges: 75 6 69
the value pair of raw_data is: 492
split the outgoings edges: 280 12 268 280
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_13)
1 6 43
layer 1 incoming edges: 69
choose: Shopping
split the incoming edges: 69 6 63
the value pair of raw_data is: 492
split the outgoings edges: 268 23 245 268
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_15)
1 7 43
layer 1 incoming edges: 63
choose: Security & monitoring systems
split the incoming edges: 63 5 58
the value pair of raw_data is: 492
split the outgoings edges: 245 18 228 246
add node: MDDNode(1,u_18) MDDNode(1,u_19), remove node: MDDNode(1,u_17)
1 8 43
layer 1 incoming edges: 58
choose: Health & fitness
split the incoming edges: 58 4 54
the value pair of raw_data is: 492
split the outgoings edges: 228 26 203 229
add node: MDDNode(1,u_20) MDDNode(1,u_21), remove node: MDDNode(1,u_19)
1 9 43
layer 1 incoming edges: 54
choose: Finance & payments
split the incoming edges: 54 4 50
the value pair of raw_data is: 492
split the outgoings edges: 203 17 186 203
add node: MDDNode(1,u_22) MDDNode(1,u_23), remove node: MDDNode(1,u_21)
1 10 43
layer 1 incoming edges: 50
choose: Mobile devices & accessories
split the incoming edges: 50 4 46
the value pair of raw_data is: 492
split the outgoings edges: 186 12 174 186
add node: MDDNode(1,u_24) MDDNode(1,u_25), remove node: MDDNode(1,u_23)
1 11 43
layer 1 incoming edges: 46
choose: Gardening
split the incoming edges: 46 3 43
the value pair of raw_data is: 492
split the outgoings edges: 174 9 165 174
add node: MDDNode(1,u_26) MDDNode(1,u_27), remove node: MDDNode(1,u_25)
1 12 43
layer 1 incoming edges: 43
choose: Smart hubs & systems
split the incoming edges: 43 3 40
the value pair of raw_data is: 492
split the outgoings edges: 165 20 151 171
add node: MDDNode(1,u_28) MDDNode(1,u_29), remove node: MDDNode(1,u_27)
1 13 43
layer 1 incoming edges: 40
choose: Environment control & monitoring
split the incoming edges: 40 3 37
the value pair of raw_data is: 492
split the outgoings edges: 151 9 144 153
add node: MDDNode(1,u_30) MDDNode(1,u_31), remove node: MDDNode(1,u_29)
1 14 43
layer 1 incoming edges: 37
choose: Weather
split the incoming edges: 37 3 34
the value pair of raw_data is: 492
split the outgoings edges: 144 30 114 144
add node: MDDNode(1,u_32) MDDNode(1,u_33), remove node: MDDNode(1,u_31)
1 15 43
layer 1 incoming edges: 34
choose: Blogging
split the incoming edges: 34 3 31
the value pair of raw_data is: 492
split the outgoings edges: 114 13 101 114
add node: MDDNode(1,u_34) MDDNode(1,u_35), remove node: MDDNode(1,u_33)
1 16 43
layer 1 incoming edges: 31
choose: Notifications
split the incoming edges: 31 3 28
the value pair of raw_data is: 492
split the outgoings edges: 101 4 97 101
add node: MDDNode(1,u_36) MDDNode(1,u_37), remove node: MDDNode(1,u_35)
1 17 43
layer 1 incoming edges: 28
choose: Power monitoring & management
split the incoming edges: 28 3 25
the value pair of raw_data is: 492
split the outgoings edges: 97 11 88 99
add node: MDDNode(1,u_38) MDDNode(1,u_39), remove node: MDDNode(1,u_37)
1 18 43
layer 1 incoming edges: 25
choose: Email
split the incoming edges: 25 3 22
the value pair of raw_data is: 492
split the outgoings edges: 88 10 78 88
add node: MDDNode(1,u_40) MDDNode(1,u_41), remove node: MDDNode(1,u_39)
1 19 43
layer 1 incoming edges: 22
choose: Communication
split the incoming edges: 22 2 20
the value pair of raw_data is: 492
split the outgoings edges: 78 12 66 78
add node: MDDNode(1,u_42) MDDNode(1,u_43), remove node: MDDNode(1,u_41)
1 20 43
layer 1 incoming edges: 20
choose: Contacts
split the incoming edges: 20 2 18
the value pair of raw_data is: 492
split the outgoings edges: 66 3 63 66
add node: MDDNode(1,u_44) MDDNode(1,u_45), remove node: MDDNode(1,u_43)
1 21 43
layer 1 incoming edges: 18
choose: Connected car
split the incoming edges: 18 2 16
the value pair of raw_data is: 492
split the outgoings edges: 63 10 53 63
add node: MDDNode(1,u_46) MDDNode(1,u_47), remove node: MDDNode(1,u_45)
1 22 43
layer 1 incoming edges: 16
choose: Calendars & scheduling
split the incoming edges: 16 2 14
the value pair of raw_data is: 492
split the outgoings edges: 53 8 45 53
add node: MDDNode(1,u_48) MDDNode(1,u_49), remove node: MDDNode(1,u_47)
1 23 43
layer 1 incoming edges: 14
choose: DIY electronics
split the incoming edges: 14 2 12
the value pair of raw_data is: 492
split the outgoings edges: 45 2 43 45
add node: MDDNode(1,u_50) MDDNode(1,u_51), remove node: MDDNode(1,u_49)
1 24 43
layer 1 incoming edges: 13
only split: [MDDArc('craigslist', MDDNode(0, 's'), MDDNode(1, 'u_6'))]
split the incoming edges: 13 1 12
the value pair of raw_data is: 492
split the outgoings edges: 60 1 59 60
add node: MDDNode(1,u_52) MDDNode(1,u_53), remove node: MDDNode(1,u_6)
1 25 43
layer 1 incoming edges: 12
choose: Appliances
split the incoming edges: 12 2 10
the value pair of raw_data is: 492
split the outgoings edges: 43 2 41 43
add node: MDDNode(1,u_54) MDDNode(1,u_55), remove node: MDDNode(1,u_51)
1 26 43
layer 1 incoming edges: 12
only split: [MDDArc('appzapp', MDDNode(0, 's'), MDDNode(1, 'u_53'))]
split the incoming edges: 12 1 11
the value pair of raw_data is: 492
split the outgoings edges: 59 6 53 59
add node: MDDNode(1,u_56) MDDNode(1,u_57), remove node: MDDNode(1,u_53)
1 27 43
layer 1 incoming edges: 11
only split: [MDDArc('space', MDDNode(0, 's'), MDDNode(1, 'u_57'))]
split the incoming edges: 11 1 10
the value pair of raw_data is: 492
split the outgoings edges: 53 8 45 53
add node: MDDNode(1,u_58) MDDNode(1,u_59), remove node: MDDNode(1,u_57)
1 28 43
layer 1 incoming edges: 10
choose: Task management & to-dos
split the incoming edges: 10 2 8
the value pair of raw_data is: 492
split the outgoings edges: 41 11 30 41
add node: MDDNode(1,u_60) MDDNode(1,u_61), remove node: MDDNode(1,u_55)
1 29 43
layer 1 incoming edges: 10
only split: [MDDArc('espn', MDDNode(0, 's'), MDDNode(1, 'u_59'))]
split the incoming edges: 10 1 9
the value pair of raw_data is: 492
split the outgoings edges: 45 6 39 45
add node: MDDNode(1,u_62) MDDNode(1,u_63), remove node: MDDNode(1,u_59)
1 30 43
layer 1 incoming edges: 9
only split: [MDDArc('flickr', MDDNode(0, 's'), MDDNode(1, 'u_8'))]
split the incoming edges: 9 1 8
the value pair of raw_data is: 492
split the outgoings edges: 35 5 30 35
add node: MDDNode(1,u_64) MDDNode(1,u_65), remove node: MDDNode(1,u_8)
1 31 43
layer 1 incoming edges: 9
only split: [MDDArc('feedly', MDDNode(0, 's'), MDDNode(1, 'u_63'))]
split the incoming edges: 9 1 8
the value pair of raw_data is: 492
split the outgoings edges: 39 4 35 39
add node: MDDNode(1,u_66) MDDNode(1,u_67), remove node: MDDNode(1,u_63)
1 32 43
layer 1 incoming edges: 8
choose: Journaling & personal data
split the incoming edges: 8 1 7
the value pair of raw_data is: 492
split the outgoings edges: 30 3 27 30
add node: MDDNode(1,u_68) MDDNode(1,u_69), remove node: MDDNode(1,u_61)
1 33 43
layer 1 incoming edges: 8
only split: [MDDArc('dailymotion', MDDNode(0, 's'), MDDNode(1, 'u_65'))]
split the incoming edges: 8 1 7
the value pair of raw_data is: 492
split the outgoings edges: 30 3 28 31
add node: MDDNode(1,u_70) MDDNode(1,u_71), remove node: MDDNode(1,u_65)
1 34 43
layer 1 incoming edges: 8
only split: [MDDArc('time', MDDNode(0, 's'), MDDNode(1, 'u_67'))]
split the incoming edges: 8 1 7
the value pair of raw_data is: 492
split the outgoings edges: 35 2 35 37
add node: MDDNode(1,u_72) MDDNode(1,u_73), remove node: MDDNode(1,u_67)
1 35 43
layer 1 incoming edges: 7
only split: [MDDArc('facebook', MDDNode(0, 's'), MDDNode(1, 'u_10'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 55 10 45 55
add node: MDDNode(1,u_74) MDDNode(1,u_75), remove node: MDDNode(1,u_10)
1 36 43
layer 1 incoming edges: 7
only split: [MDDArc('entertainment_weekly', MDDNode(0, 's'), MDDNode(1, 'u_12'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 21 2 19 21
add node: MDDNode(1,u_76) MDDNode(1,u_77), remove node: MDDNode(1,u_12)
1 37 43
layer 1 incoming edges: 7
choose: Lighting
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 27 3 24 27
add node: MDDNode(1,u_78) MDDNode(1,u_79), remove node: MDDNode(1,u_69)
1 38 43
layer 1 incoming edges: 7
only split: [MDDArc('stockimo', MDDNode(0, 's'), MDDNode(1, 'u_71'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 28 6 22 28
add node: MDDNode(1,u_80) MDDNode(1,u_81), remove node: MDDNode(1,u_71)
1 39 43
layer 1 incoming edges: 7
only split: [MDDArc('feed', MDDNode(0, 's'), MDDNode(1, 'u_73'))]
split the incoming edges: 7 1 6
the value pair of raw_data is: 492
split the outgoings edges: 35 2 33 35
add node: MDDNode(1,u_82) MDDNode(1,u_83), remove node: MDDNode(1,u_73)
1 40 43
layer 1 incoming edges: 6
only split: [MDDArc('pinboard', MDDNode(0, 's'), MDDNode(1, 'u_14'))]
split the incoming edges: 6 1 5
the value pair of raw_data is: 492
split the outgoings edges: 12 2 12 14
add node: MDDNode(1,u_84) MDDNode(1,u_85), remove node: MDDNode(1,u_14)
1 41 43
layer 1 incoming edges: 6
only split: [MDDArc('ebay', MDDNode(0, 's'), MDDNode(1, 'u_16'))]
split the incoming edges: 6 1 5
the value pair of raw_data is: 492
split the outgoings edges: 23 1 22 23
add node: MDDNode(1,u_86) MDDNode(1,u_87), remove node: MDDNode(1,u_16)
1 42 43
layer 1 incoming edges: 6
only split: [MDDArc('sina_weibo', MDDNode(0, 's'), MDDNode(1, 'u_75'))]
split the incoming edges: 6 1 5
the value pair of raw_data is: 492
split the outgoings edges: 45 2 44 46
add node: MDDNode(1,u_88) MDDNode(1,u_89), remove node: MDDNode(1,u_75)
dump to the pickle
the graph width list : [1, 43, 1, 1, 1, 1]
it 1 train 0.3385   train_h 0.1654   train_v 0.9324   dev 0.2915   dev_h 0.1771   dev_v 0.9315   new_test 0.3599   new_test_h 0.1600   new_test_v 0.9430   save acc: 0.3599 T: 2020-01-10T10:12 
it 2 train 0.4258   train_h 0.1435   train_v 0.9454   dev 0.3332   dev_h 0.1667   dev_v 0.9414   new_test 0.4408   new_test_h 0.1398   new_test_v 0.9535   save acc: 0.4408 T: 2020-01-10T10:16 
it 3 train 0.4748   train_h 0.1313   train_v 0.9473   dev 0.3443   dev_h 0.1639   dev_v 0.9356   new_test 0.4670   new_test_h 0.1332   new_test_v 0.9495   save acc: 0.4670 T: 2020-01-10T10:19 
it 4 train 0.5166   train_h 0.1209   train_v 0.9511   dev 0.3450   dev_h 0.1638   dev_v 0.9356   new_test 0.4707   new_test_h 0.1323   new_test_v 0.9547   save acc: 0.4707 T: 2020-01-10T10:22 
it 5 train 0.5477   train_h 0.1131   train_v 0.9553   dev 0.3527   dev_h 0.1618   dev_v 0.9291   new_test 0.4735   new_test_h 0.1316   new_test_v 0.9559   save acc: 0.4735 T: 2020-01-10T10:25 
it 6 train 0.5706   train_h 0.1073   train_v 0.9555   dev 0.3474   dev_h 0.1632   dev_v 0.9313   new_test 0.4687   new_test_h 0.1328   new_test_v 0.9474   
it 7 train 0.5884   train_h 0.1029   train_v 0.9591   dev 0.3484   dev_h 0.1629   dev_v 0.9351   new_test 0.4743   new_test_h 0.1314   new_test_v 0.9511   
it 8 train 0.6037   train_h 0.0991   train_v 0.9587   dev 0.3450   dev_h 0.1638   dev_v 0.9291   new_test 0.4654   new_test_h 0.1336   new_test_v 0.9486   
it 9 train 0.6163   train_h 0.0959   train_v 0.9602   dev 0.3431   dev_h 0.1642   dev_v 0.9327   new_test 0.4695   new_test_h 0.1326   new_test_v 0.9519   
it 10 train 0.6251   train_h 0.0937   train_v 0.9602   dev 0.3411   dev_h 0.1647   dev_v 0.9294   new_test 0.4670   new_test_h 0.1332   new_test_v 0.9535   
it 11 train 0.6322   train_h 0.0920   train_v 0.9615   dev 0.3385   dev_h 0.1654   dev_v 0.9282   new_test 0.4662   new_test_h 0.1334   new_test_v 0.9523   
it 12 train 0.6389   train_h 0.0903   train_v 0.9624   dev 0.3404   dev_h 0.1649   dev_v 0.9303   new_test 0.4687   new_test_h 0.1328   new_test_v 0.9466   
it 13 train 0.6433   train_h 0.0892   train_v 0.9618   dev 0.3433   dev_h 0.1642   dev_v 0.9311   new_test 0.4658   new_test_h 0.1335   new_test_v 0.9486   
it 14 train 0.6478   train_h 0.0881   train_v 0.9627   dev 0.3433   dev_h 0.1642   dev_v 0.9253   new_test 0.4630   new_test_h 0.1342   new_test_v 0.9450   
it 15 train 0.6509   train_h 0.0873   train_v 0.9636   dev 0.3402   dev_h 0.1650   dev_v 0.9296   new_test 0.4650   new_test_h 0.1337   new_test_v 0.9478   
it 16 train 0.6526   train_h 0.0869   train_v 0.9625   dev 0.3363   dev_h 0.1659   dev_v 0.9255   new_test 0.4634   new_test_h 0.1341   new_test_v 0.9478   
