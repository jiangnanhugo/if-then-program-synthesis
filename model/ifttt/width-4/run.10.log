args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-4/pid-10-', width='4')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'lstm', 'decoder': 'attention', 'embedding_size': 50, 'keep_prob': 0.5, 'memory_size': 25, 'num_layers': 1, 'num_units': 50, 'use_embedding': True, 'epoches': 20, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.01, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8580
save to model/ifttt/width-4/pid-10-IFTTT-w-4.json
load json
numArcLayers: 5
1 1 4
layer 1 incoming edges: 111
split the incoming edges: 111 55 56
the value pair of raw_data is: 492
split the outgoings edges: 443 224 237 461
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
2 1 4
layer 2 incoming edges: 461
split the incoming edges: 461 225 236
the value pair of raw_data is: 6265
split the outgoings edges: 88 87 88 175
add node: MDDNode(2,u_8) MDDNode(2,u_9), remove node: MDDNode(2,u_2)
3 1 4
layer 3 incoming edges: 175
split the incoming edges: 175 96 79
the value pair of raw_data is: 202
split the outgoings edges: 161 137 112 249
add node: MDDNode(3,u_10) MDDNode(3,u_11), remove node: MDDNode(3,u_3)
4 1 4
layer 4 incoming edges: 249
split the incoming edges: 249 132 117
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_12) MDDNode(4,u_13), remove node: MDDNode(4,u_4)
1 2 4
layer 1 incoming edges: 55
split the incoming edges: 55 33 22
the value pair of raw_data is: 492
split the outgoings edges: 224 138 91 229
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_6)
layer 1 incoming edges: 56
split the incoming edges: 56 31 25
the value pair of raw_data is: 492
split the outgoings edges: 237 120 120 240
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_7)
2 2 4
layer 2 incoming edges: 229
split the incoming edges: 229 113 116
the value pair of raw_data is: 6265
split the outgoings edges: 87 86 82 168
add node: MDDNode(2,u_18) MDDNode(2,u_19), remove node: MDDNode(2,u_8)
layer 2 incoming edges: 240
split the incoming edges: 240 133 107
the value pair of raw_data is: 6265
split the outgoings edges: 88 87 85 172
add node: MDDNode(2,u_20) MDDNode(2,u_21), remove node: MDDNode(2,u_9)
3 2 4
layer 3 incoming edges: 182
split the incoming edges: 182 92 90
the value pair of raw_data is: 202
split the outgoings edges: 137 116 125 241
add node: MDDNode(3,u_22) MDDNode(3,u_23), remove node: MDDNode(3,u_10)
layer 3 incoming edges: 158
split the incoming edges: 158 73 85
the value pair of raw_data is: 202
split the outgoings edges: 112 87 95 182
add node: MDDNode(3,u_24) MDDNode(3,u_25), remove node: MDDNode(3,u_11)
4 2 4
layer 4 incoming edges: 223
split the incoming edges: 223 95 128
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_26) MDDNode(4,u_27), remove node: MDDNode(4,u_12)
layer 4 incoming edges: 200
split the incoming edges: 200 107 93
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_28) MDDNode(4,u_29), remove node: MDDNode(4,u_13)
The bucket size: [25]
the graph width list : [1, 4, 4, 4, 4, 1]
iter= 1 dev 0.2609   test 0.2621   intelligible 0.3390   english 0.2784   gold 0.5719   save acc: 0.3390 time: 2019-11-27T01:38 
iter= 2 dev 0.3071   test 0.2859   intelligible 0.3693   english 0.3043   gold 0.5822   save acc: 0.3693 time: 2019-11-27T01:39 
iter= 3 dev 0.3180   test 0.3127   intelligible 0.4083   english 0.3355   gold 0.6918   save acc: 0.4083 time: 2019-11-27T01:40 
iter= 4 dev 0.3199   test 0.3241   intelligible 0.4148   english 0.3424   gold 0.7209   save acc: 0.4148 time: 2019-11-27T01:41 
iter= 5 dev 0.3227   test 0.3228   intelligible 0.4152   english 0.3418   gold 0.7021   save acc: 0.4152 time: 2019-11-27T01:42 
iter= 6 dev 0.3180   test 0.3218   intelligible 0.4167   english 0.3427   gold 0.7106   save acc: 0.4167 time: 2019-11-27T01:43 
iter= 7 dev 0.3237   test 0.3210   intelligible 0.4155   english 0.3415   gold 0.7329   
iter= 8 dev 0.3306   test 0.3249   intelligible 0.4193   english 0.3447   gold 0.7449   save acc: 0.4193 time: 2019-11-27T01:45 
iter= 9 dev 0.3313   test 0.3213   intelligible 0.4159   english 0.3415   gold 0.7226   
iter= 10 dev 0.3249   test 0.3215   intelligible 0.4167   english 0.3427   gold 0.7414   
iter= 11 dev 0.3256   test 0.3295   intelligible 0.4254   english 0.3501   gold 0.7432   save acc: 0.4254 time: 2019-11-27T01:48 
iter= 12 dev 0.3277   test 0.3249   intelligible 0.4235   english 0.3477   gold 0.7397   
iter= 13 dev 0.3268   test 0.3257   intelligible 0.4212   english 0.3462   gold 0.7397   
iter= 14 dev 0.3251   test 0.3249   intelligible 0.4216   english 0.3465   gold 0.7517   
iter= 15 dev 0.3273   test 0.3277   intelligible 0.4231   english 0.3477   gold 0.7500   
iter= 16 dev 0.3254   test 0.3246   intelligible 0.4197   english 0.3447   gold 0.7346   
iter= 17 dev 0.3246   test 0.3254   intelligible 0.4220   english 0.3468   gold 0.7466   
iter= 18 dev 0.3249   test 0.3264   intelligible 0.4242   english 0.3486   gold 0.7483   
iter= 19 dev 0.3263   test 0.3262   intelligible 0.4231   english 0.3480   gold 0.7517   
iter= 20 dev 0.3251   test 0.3251   intelligible 0.4227   english 0.3468   gold 0.7466   
iter= 21 dev 0.3261   test 0.3251   intelligible 0.4227   english 0.3471   gold 0.7449   
