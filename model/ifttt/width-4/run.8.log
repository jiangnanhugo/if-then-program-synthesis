args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-4/pid-8-', width='4')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'lstm', 'decoder': 'attention', 'embedding_size': 50, 'keep_prob': 0.5, 'memory_size': 25, 'num_layers': 1, 'num_units': 50, 'use_embedding': True, 'epoches': 20, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.01, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8580
save to model/ifttt/width-4/pid-8-IFTTT-w-4.json
load json
numArcLayers: 5
1 1 4
layer 1 incoming edges: 111
split the incoming edges: 111 59 52
the value pair of raw_data is: 492
split the outgoings edges: 443 265 200 465
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
2 1 4
layer 2 incoming edges: 465
split the incoming edges: 465 224 241
the value pair of raw_data is: 6265
split the outgoings edges: 88 87 88 175
add node: MDDNode(2,u_8) MDDNode(2,u_9), remove node: MDDNode(2,u_2)
3 1 4
layer 3 incoming edges: 175
split the incoming edges: 175 83 92
the value pair of raw_data is: 202
split the outgoings edges: 161 128 125 253
add node: MDDNode(3,u_10) MDDNode(3,u_11), remove node: MDDNode(3,u_3)
4 1 4
layer 4 incoming edges: 253
split the incoming edges: 253 129 124
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_12) MDDNode(4,u_13), remove node: MDDNode(4,u_4)
1 2 4
layer 1 incoming edges: 59
split the incoming edges: 59 30 29
the value pair of raw_data is: 492
split the outgoings edges: 265 134 144 278
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_6)
layer 1 incoming edges: 52
split the incoming edges: 52 23 29
the value pair of raw_data is: 492
split the outgoings edges: 200 103 100 203
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_7)
2 2 4
layer 2 incoming edges: 231
split the incoming edges: 231 116 115
the value pair of raw_data is: 6265
split the outgoings edges: 87 86 86 172
add node: MDDNode(2,u_18) MDDNode(2,u_19), remove node: MDDNode(2,u_8)
layer 2 incoming edges: 250
split the incoming edges: 250 124 126
the value pair of raw_data is: 6265
split the outgoings edges: 88 87 86 173
add node: MDDNode(2,u_20) MDDNode(2,u_21), remove node: MDDNode(2,u_9)
3 2 4
layer 3 incoming edges: 163
split the incoming edges: 163 89 74
the value pair of raw_data is: 202
split the outgoings edges: 128 112 103 215
add node: MDDNode(3,u_22) MDDNode(3,u_23), remove node: MDDNode(3,u_10)
layer 3 incoming edges: 182
split the incoming edges: 182 98 84
the value pair of raw_data is: 202
split the outgoings edges: 125 112 100 212
add node: MDDNode(3,u_24) MDDNode(3,u_25), remove node: MDDNode(3,u_11)
4 2 4
layer 4 incoming edges: 224
split the incoming edges: 224 108 116
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_26) MDDNode(4,u_27), remove node: MDDNode(4,u_12)
layer 4 incoming edges: 203
split the incoming edges: 203 102 101
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_28) MDDNode(4,u_29), remove node: MDDNode(4,u_13)
The bucket size: [25]
the graph width list : [1, 4, 4, 4, 4, 1]
iter= 1 dev 0.2718   test 0.2523   intelligible 0.3216   english 0.2665   gold 0.5086   save acc: 0.3216 time: 2019-11-27T00:25 
iter= 2 dev 0.3100   test 0.2900   intelligible 0.3720   english 0.3096   gold 0.5942   save acc: 0.3720 time: 2019-11-27T00:26 
iter= 3 dev 0.3083   test 0.3021   intelligible 0.3955   english 0.3257   gold 0.7072   save acc: 0.3955 time: 2019-11-27T00:27 
iter= 4 dev 0.3128   test 0.3135   intelligible 0.4053   english 0.3358   gold 0.7106   save acc: 0.4053 time: 2019-11-27T00:28 
iter= 5 dev 0.3227   test 0.3189   intelligible 0.4148   english 0.3403   gold 0.7346   save acc: 0.4148 time: 2019-11-27T00:29 
iter= 6 dev 0.3164   test 0.3135   intelligible 0.4076   english 0.3349   gold 0.7243   
iter= 7 dev 0.3159   test 0.3205   intelligible 0.4148   english 0.3409   gold 0.7295   
iter= 8 dev 0.3235   test 0.3208   intelligible 0.4182   english 0.3438   gold 0.7192   save acc: 0.4182 time: 2019-11-27T00:32 
iter= 9 dev 0.3218   test 0.3231   intelligible 0.4189   english 0.3444   gold 0.7295   save acc: 0.4189 time: 2019-11-27T00:34 
iter= 10 dev 0.3282   test 0.3241   intelligible 0.4216   english 0.3462   gold 0.7312   save acc: 0.4216 time: 2019-11-27T00:35 
iter= 11 dev 0.3249   test 0.3280   intelligible 0.4284   english 0.3525   gold 0.7432   save acc: 0.4284 time: 2019-11-27T00:36 
iter= 12 dev 0.3227   test 0.3239   intelligible 0.4227   english 0.3474   gold 0.7397   
iter= 13 dev 0.3235   test 0.3210   intelligible 0.4182   english 0.3447   gold 0.7277   
iter= 14 dev 0.3197   test 0.3228   intelligible 0.4205   english 0.3447   gold 0.7363   
iter= 15 dev 0.3225   test 0.3233   intelligible 0.4201   english 0.3459   gold 0.7312   
iter= 16 dev 0.3227   test 0.3208   intelligible 0.4178   english 0.3441   gold 0.7363   
iter= 17 dev 0.3242   test 0.3192   intelligible 0.4163   english 0.3430   gold 0.7277   
iter= 18 dev 0.3230   test 0.3208   intelligible 0.4205   english 0.3453   gold 0.7363   
iter= 19 dev 0.3232   test 0.3202   intelligible 0.4193   english 0.3447   gold 0.7329   
iter= 20 dev 0.3225   test 0.3205   intelligible 0.4189   english 0.3450   gold 0.7346   
iter= 21 dev 0.3242   test 0.3210   intelligible 0.4193   english 0.3453   gold 0.7363   
