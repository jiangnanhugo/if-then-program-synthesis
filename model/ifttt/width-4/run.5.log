args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-4/pid-5-', width='4')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'lstm', 'decoder': 'attention', 'embedding_size': 50, 'keep_prob': 0.5, 'memory_size': 25, 'num_layers': 1, 'num_units': 50, 'use_embedding': True, 'epoches': 20, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.01, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8580
save to model/ifttt/width-4/pid-5-IFTTT-w-4.json
load json
numArcLayers: 5
1 1 4
layer 1 incoming edges: 111
split the incoming edges: 111 54 57
the value pair of raw_data is: 492
split the outgoings edges: 443 228 235 463
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
2 1 4
layer 2 incoming edges: 463
split the incoming edges: 463 224 239
the value pair of raw_data is: 6265
split the outgoings edges: 88 88 87 175
add node: MDDNode(2,u_8) MDDNode(2,u_9), remove node: MDDNode(2,u_2)
3 1 4
layer 3 incoming edges: 175
split the incoming edges: 175 72 103
the value pair of raw_data is: 202
split the outgoings edges: 161 101 129 230
add node: MDDNode(3,u_10) MDDNode(3,u_11), remove node: MDDNode(3,u_3)
4 1 4
layer 4 incoming edges: 230
split the incoming edges: 230 118 112
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_12) MDDNode(4,u_13), remove node: MDDNode(4,u_4)
1 2 4
layer 1 incoming edges: 54
split the incoming edges: 54 23 31
the value pair of raw_data is: 492
split the outgoings edges: 228 96 137 233
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_6)
layer 1 incoming edges: 57
split the incoming edges: 57 25 32
the value pair of raw_data is: 492
split the outgoings edges: 235 99 143 242
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_7)
2 2 4
layer 2 incoming edges: 230
split the incoming edges: 230 107 123
the value pair of raw_data is: 6265
split the outgoings edges: 88 86 87 173
add node: MDDNode(2,u_18) MDDNode(2,u_19), remove node: MDDNode(2,u_8)
layer 2 incoming edges: 245
split the incoming edges: 245 119 126
the value pair of raw_data is: 6265
split the outgoings edges: 87 83 87 170
add node: MDDNode(2,u_20) MDDNode(2,u_21), remove node: MDDNode(2,u_9)
3 2 4
layer 3 incoming edges: 141
split the incoming edges: 141 70 71
the value pair of raw_data is: 202
split the outgoings edges: 101 78 94 172
add node: MDDNode(3,u_22) MDDNode(3,u_23), remove node: MDDNode(3,u_10)
layer 3 incoming edges: 202
split the incoming edges: 202 106 96
the value pair of raw_data is: 202
split the outgoings edges: 129 110 118 228
add node: MDDNode(3,u_24) MDDNode(3,u_25), remove node: MDDNode(3,u_11)
4 2 4
layer 4 incoming edges: 208
split the incoming edges: 208 95 113
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_26) MDDNode(4,u_27), remove node: MDDNode(4,u_12)
layer 4 incoming edges: 192
split the incoming edges: 192 102 90
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_28) MDDNode(4,u_29), remove node: MDDNode(4,u_13)
The bucket size: [25]
the graph width list : [1, 4, 4, 4, 4, 1]
iter= 1 dev 0.2751   test 0.2618   intelligible 0.3345   english 0.2799   gold 0.5274   save acc: 0.3345 time: 2019-11-26T23:18 
iter= 2 dev 0.2950   test 0.2949   intelligible 0.3837   english 0.3144   gold 0.6729   save acc: 0.3837 time: 2019-11-26T23:19 
iter= 3 dev 0.3128   test 0.3021   intelligible 0.3909   english 0.3227   gold 0.6884   save acc: 0.3909 time: 2019-11-26T23:20 
iter= 4 dev 0.3216   test 0.3122   intelligible 0.4106   english 0.3373   gold 0.7295   save acc: 0.4106 time: 2019-11-26T23:21 
iter= 5 dev 0.3182   test 0.3158   intelligible 0.4148   english 0.3403   gold 0.7449   save acc: 0.4148 time: 2019-11-26T23:22 
iter= 6 dev 0.3201   test 0.3195   intelligible 0.4178   english 0.3441   gold 0.7517   save acc: 0.4178 time: 2019-11-26T23:23 
iter= 7 dev 0.3168   test 0.3197   intelligible 0.4220   english 0.3447   gold 0.7534   save acc: 0.4220 time: 2019-11-26T23:24 
iter= 8 dev 0.3180   test 0.3241   intelligible 0.4280   english 0.3504   gold 0.7774   save acc: 0.4280 time: 2019-11-26T23:25 
iter= 9 dev 0.3232   test 0.3254   intelligible 0.4288   english 0.3516   gold 0.7620   save acc: 0.4288 time: 2019-11-26T23:26 
iter= 10 dev 0.3230   test 0.3264   intelligible 0.4292   english 0.3510   gold 0.7654   save acc: 0.4292 time: 2019-11-26T23:27 
iter= 11 dev 0.3218   test 0.3288   intelligible 0.4348   english 0.3557   gold 0.7877   save acc: 0.4348 time: 2019-11-26T23:28 
iter= 12 dev 0.3258   test 0.3306   intelligible 0.4345   english 0.3557   gold 0.7637   
iter= 13 dev 0.3227   test 0.3259   intelligible 0.4299   english 0.3522   gold 0.7620   
iter= 14 dev 0.3251   test 0.3295   intelligible 0.4352   english 0.3551   gold 0.7705   save acc: 0.4352 time: 2019-11-26T23:31 
iter= 15 dev 0.3220   test 0.3285   intelligible 0.4341   english 0.3546   gold 0.7688   
iter= 16 dev 0.3225   test 0.3275   intelligible 0.4330   english 0.3540   gold 0.7620   
iter= 17 dev 0.3254   test 0.3283   intelligible 0.4356   english 0.3551   gold 0.7740   save acc: 0.4356 time: 2019-11-26T23:34 
iter= 18 dev 0.3244   test 0.3295   intelligible 0.4367   english 0.3566   gold 0.7825   save acc: 0.4367 time: 2019-11-26T23:36 
iter= 19 dev 0.3244   test 0.3267   intelligible 0.4326   english 0.3528   gold 0.7723   
iter= 20 dev 0.3246   test 0.3290   intelligible 0.4356   english 0.3557   gold 0.7774   
iter= 21 dev 0.3254   test 0.3290   intelligible 0.4352   english 0.3551   gold 0.7774   
