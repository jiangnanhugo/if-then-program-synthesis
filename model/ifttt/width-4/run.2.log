args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-4/pid-2-', width='4')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'lstm', 'decoder': 'attention', 'embedding_size': 50, 'keep_prob': 0.5, 'memory_size': 25, 'num_layers': 1, 'num_units': 50, 'use_embedding': True, 'epoches': 20, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.01, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8580
save to model/ifttt/width-4/pid-2-IFTTT-w-4.json
load json
numArcLayers: 5
1 1 4
layer 1 incoming edges: 111
split the incoming edges: 111 57 54
the value pair of raw_data is: 492
split the outgoings edges: 443 213 256 469
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
2 1 4
layer 2 incoming edges: 469
split the incoming edges: 469 219 250
the value pair of raw_data is: 6265
split the outgoings edges: 88 88 88 176
add node: MDDNode(2,u_8) MDDNode(2,u_9), remove node: MDDNode(2,u_2)
3 1 4
layer 3 incoming edges: 176
split the incoming edges: 176 92 84
the value pair of raw_data is: 202
split the outgoings edges: 161 125 134 259
add node: MDDNode(3,u_10) MDDNode(3,u_11), remove node: MDDNode(3,u_3)
4 1 4
layer 4 incoming edges: 259
split the incoming edges: 259 146 113
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_12) MDDNode(4,u_13), remove node: MDDNode(4,u_4)
1 2 4
layer 1 incoming edges: 57
split the incoming edges: 57 30 27
the value pair of raw_data is: 492
split the outgoings edges: 213 98 119 217
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_6)
layer 1 incoming edges: 54
split the incoming edges: 54 30 24
the value pair of raw_data is: 492
split the outgoings edges: 256 145 118 263
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_7)
2 2 4
layer 2 incoming edges: 226
split the incoming edges: 226 102 124
the value pair of raw_data is: 6265
split the outgoings edges: 88 86 84 170
add node: MDDNode(2,u_18) MDDNode(2,u_19), remove node: MDDNode(2,u_8)
layer 2 incoming edges: 254
split the incoming edges: 254 130 124
the value pair of raw_data is: 6265
split the outgoings edges: 88 87 87 174
add node: MDDNode(2,u_20) MDDNode(2,u_21), remove node: MDDNode(2,u_9)
3 2 4
layer 3 incoming edges: 179
split the incoming edges: 179 100 79
the value pair of raw_data is: 202
split the outgoings edges: 125 112 103 215
add node: MDDNode(3,u_22) MDDNode(3,u_23), remove node: MDDNode(3,u_10)
layer 3 incoming edges: 165
split the incoming edges: 165 83 82
the value pair of raw_data is: 202
split the outgoings edges: 134 119 103 222
add node: MDDNode(3,u_24) MDDNode(3,u_25), remove node: MDDNode(3,u_11)
4 2 4
layer 4 incoming edges: 245
split the incoming edges: 245 111 134
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_26) MDDNode(4,u_27), remove node: MDDNode(4,u_12)
layer 4 incoming edges: 192
split the incoming edges: 192 98 94
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_28) MDDNode(4,u_29), remove node: MDDNode(4,u_13)
The bucket size: [25]
the graph width list : [1, 4, 4, 4, 4, 1]
iter= 1 dev 0.2521   test 0.2396   intelligible 0.3080   english 0.2546   gold 0.4966   save acc: 0.3080 time: 2019-11-26T22:10 
iter= 2 dev 0.2993   test 0.3014   intelligible 0.3886   english 0.3221   gold 0.6832   save acc: 0.3886 time: 2019-11-26T22:11 
iter= 3 dev 0.3071   test 0.2990   intelligible 0.3841   english 0.3180   gold 0.6147   
iter= 4 dev 0.3133   test 0.3009   intelligible 0.3909   english 0.3221   gold 0.6592   save acc: 0.3909 time: 2019-11-26T22:13 
iter= 5 dev 0.3258   test 0.3120   intelligible 0.4102   english 0.3355   gold 0.7329   save acc: 0.4102 time: 2019-11-26T22:14 
iter= 6 dev 0.3213   test 0.3174   intelligible 0.4129   english 0.3397   gold 0.7209   save acc: 0.4129 time: 2019-11-26T22:15 
iter= 7 dev 0.3363   test 0.3122   intelligible 0.4045   english 0.3337   gold 0.6884   
iter= 8 dev 0.3346   test 0.3272   intelligible 0.4284   english 0.3513   gold 0.7500   save acc: 0.4284 time: 2019-11-26T22:17 
iter= 9 dev 0.3320   test 0.3179   intelligible 0.4117   english 0.3394   gold 0.6832   
iter= 10 dev 0.3294   test 0.3246   intelligible 0.4235   english 0.3474   gold 0.7346   
iter= 11 dev 0.3315   test 0.3244   intelligible 0.4220   english 0.3468   gold 0.7346   
iter= 12 dev 0.3277   test 0.3257   intelligible 0.4235   english 0.3489   gold 0.7380   
iter= 13 dev 0.3320   test 0.3270   intelligible 0.4250   english 0.3498   gold 0.7397   
iter= 14 dev 0.3325   test 0.3251   intelligible 0.4227   english 0.3480   gold 0.7414   
iter= 15 dev 0.3303   test 0.3241   intelligible 0.4201   english 0.3468   gold 0.7414   
iter= 16 dev 0.3282   test 0.3218   intelligible 0.4189   english 0.3444   gold 0.7363   
iter= 17 dev 0.3273   test 0.3239   intelligible 0.4220   english 0.3474   gold 0.7414   
iter= 18 dev 0.3284   test 0.3246   intelligible 0.4231   english 0.3480   gold 0.7346   
iter= 19 dev 0.3315   test 0.3244   intelligible 0.4216   english 0.3468   gold 0.7346   
iter= 20 dev 0.3296   test 0.3231   intelligible 0.4212   english 0.3465   gold 0.7380   
iter= 21 dev 0.3280   test 0.3233   intelligible 0.4201   english 0.3459   gold 0.7363   
