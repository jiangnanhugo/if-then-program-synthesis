args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-4/pid-4-', width='4')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'lstm', 'decoder': 'attention', 'embedding_size': 50, 'keep_prob': 0.5, 'memory_size': 25, 'num_layers': 1, 'num_units': 50, 'use_embedding': True, 'epoches': 20, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.01, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8580
save to model/ifttt/width-4/pid-4-IFTTT-w-4.json
load json
numArcLayers: 5
1 1 4
layer 1 incoming edges: 111
split the incoming edges: 111 58 53
the value pair of raw_data is: 492
split the outgoings edges: 443 245 215 460
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
2 1 4
layer 2 incoming edges: 460
split the incoming edges: 460 230 230
the value pair of raw_data is: 6265
split the outgoings edges: 88 88 87 175
add node: MDDNode(2,u_8) MDDNode(2,u_9), remove node: MDDNode(2,u_2)
3 1 4
layer 3 incoming edges: 175
split the incoming edges: 175 81 94
the value pair of raw_data is: 202
split the outgoings edges: 161 113 143 256
add node: MDDNode(3,u_10) MDDNode(3,u_11), remove node: MDDNode(3,u_3)
4 1 4
layer 4 incoming edges: 256
split the incoming edges: 256 139 117
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_12) MDDNode(4,u_13), remove node: MDDNode(4,u_4)
1 2 4
layer 1 incoming edges: 58
split the incoming edges: 58 32 26
the value pair of raw_data is: 492
split the outgoings edges: 245 141 110 251
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_6)
layer 1 incoming edges: 53
split the incoming edges: 53 24 29
the value pair of raw_data is: 492
split the outgoings edges: 215 86 137 223
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_7)
2 2 4
layer 2 incoming edges: 240
split the incoming edges: 240 109 131
the value pair of raw_data is: 6265
split the outgoings edges: 88 86 86 172
add node: MDDNode(2,u_18) MDDNode(2,u_19), remove node: MDDNode(2,u_8)
layer 2 incoming edges: 234
split the incoming edges: 234 119 115
the value pair of raw_data is: 6265
split the outgoings edges: 87 84 85 169
add node: MDDNode(2,u_20) MDDNode(2,u_21), remove node: MDDNode(2,u_9)
3 2 4
layer 3 incoming edges: 157
split the incoming edges: 157 73 84
the value pair of raw_data is: 202
split the outgoings edges: 113 90 97 187
add node: MDDNode(3,u_22) MDDNode(3,u_23), remove node: MDDNode(3,u_10)
layer 3 incoming edges: 184
split the incoming edges: 184 100 84
the value pair of raw_data is: 202
split the outgoings edges: 143 133 116 249
add node: MDDNode(3,u_24) MDDNode(3,u_25), remove node: MDDNode(3,u_11)
4 2 4
layer 4 incoming edges: 237
split the incoming edges: 237 114 123
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_26) MDDNode(4,u_27), remove node: MDDNode(4,u_12)
layer 4 incoming edges: 199
split the incoming edges: 199 99 100
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_28) MDDNode(4,u_29), remove node: MDDNode(4,u_13)
The bucket size: [25]
the graph width list : [1, 4, 4, 4, 4, 1]
iter= 1 dev 0.2725   test 0.2569   intelligible 0.3284   english 0.2722   gold 0.5051   save acc: 0.3284 time: 2019-11-26T22:55 
iter= 2 dev 0.3118   test 0.2866   intelligible 0.3682   english 0.3049   gold 0.6079   save acc: 0.3682 time: 2019-11-26T22:56 
iter= 3 dev 0.3137   test 0.3151   intelligible 0.4072   english 0.3355   gold 0.7055   save acc: 0.4072 time: 2019-11-26T22:57 
iter= 4 dev 0.3137   test 0.3037   intelligible 0.3905   english 0.3230   gold 0.6353   
iter= 5 dev 0.3190   test 0.3223   intelligible 0.4133   english 0.3412   gold 0.6644   save acc: 0.4133 time: 2019-11-26T22:59 
iter= 6 dev 0.3254   test 0.3272   intelligible 0.4242   english 0.3495   gold 0.7260   save acc: 0.4242 time: 2019-11-26T23:00 
iter= 7 dev 0.3218   test 0.3251   intelligible 0.4254   english 0.3489   gold 0.7329   save acc: 0.4254 time: 2019-11-26T23:01 
iter= 8 dev 0.3232   test 0.3210   intelligible 0.4186   english 0.3447   gold 0.7295   
iter= 9 dev 0.3258   test 0.3270   intelligible 0.4273   english 0.3513   gold 0.7414   save acc: 0.4273 time: 2019-11-26T23:03 
iter= 10 dev 0.3239   test 0.3241   intelligible 0.4216   english 0.3468   gold 0.7380   
iter= 11 dev 0.3201   test 0.3228   intelligible 0.4178   english 0.3456   gold 0.7312   
iter= 12 dev 0.3244   test 0.3257   intelligible 0.4242   english 0.3483   gold 0.7312   
iter= 13 dev 0.3254   test 0.3241   intelligible 0.4212   english 0.3468   gold 0.7346   
iter= 14 dev 0.3237   test 0.3264   intelligible 0.4258   english 0.3498   gold 0.7363   
iter= 15 dev 0.3268   test 0.3254   intelligible 0.4239   english 0.3486   gold 0.7295   
iter= 16 dev 0.3251   test 0.3231   intelligible 0.4197   english 0.3453   gold 0.7295   
iter= 17 dev 0.3242   test 0.3236   intelligible 0.4208   english 0.3456   gold 0.7295   
iter= 18 dev 0.3270   test 0.3231   intelligible 0.4197   english 0.3450   gold 0.7363   
iter= 19 dev 0.3246   test 0.3233   intelligible 0.4208   english 0.3459   gold 0.7295   
iter= 20 dev 0.3237   test 0.3223   intelligible 0.4205   english 0.3450   gold 0.7277   
iter= 21 dev 0.3244   test 0.3213   intelligible 0.4186   english 0.3435   gold 0.7346   
