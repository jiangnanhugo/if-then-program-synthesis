args Namespace(config='configs/config_l.json', dataset='dataset/IFTTT/msr_data.pkl', load_model=None, mode='train', output='model/ifttt/width-4/pid-6-', width='4')
configure: {'max_word_id': 4000, 'bidirectional': True, 'cell_type': 'lstm', 'decoder': 'attention', 'embedding_size': 50, 'keep_prob': 0.5, 'memory_size': 25, 'num_layers': 1, 'num_units': 50, 'use_embedding': True, 'epoches': 20, 'batch_size': 32, 'init': {'name': 'random_uniform_initializer', 'scale': 0.1}, 'lr_scheduler': {'decay_steps': 5000, 'init_lr': 0.01, 'staircase': True}, 'max_grad_norm': 1, 'optimizer': 'AdamOptimizer'}
# path 8580
save to model/ifttt/width-4/pid-6-IFTTT-w-4.json
load json
numArcLayers: 5
1 1 4
layer 1 incoming edges: 111
split the incoming edges: 111 65 46
the value pair of raw_data is: 492
split the outgoings edges: 443 268 192 460
add node: MDDNode(1,u_6) MDDNode(1,u_7), remove node: MDDNode(1,u_1)
2 1 4
layer 2 incoming edges: 460
split the incoming edges: 460 234 226
the value pair of raw_data is: 6265
split the outgoings edges: 88 88 88 176
add node: MDDNode(2,u_8) MDDNode(2,u_9), remove node: MDDNode(2,u_2)
3 1 4
layer 3 incoming edges: 176
split the incoming edges: 176 80 96
the value pair of raw_data is: 202
split the outgoings edges: 161 115 140 255
add node: MDDNode(3,u_10) MDDNode(3,u_11), remove node: MDDNode(3,u_3)
4 1 4
layer 4 incoming edges: 255
split the incoming edges: 255 147 108
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_12) MDDNode(4,u_13), remove node: MDDNode(4,u_4)
1 2 4
layer 1 incoming edges: 65
split the incoming edges: 65 36 29
the value pair of raw_data is: 492
split the outgoings edges: 268 165 112 277
add node: MDDNode(1,u_14) MDDNode(1,u_15), remove node: MDDNode(1,u_6)
layer 1 incoming edges: 46
split the incoming edges: 46 22 24
the value pair of raw_data is: 492
split the outgoings edges: 192 100 92 192
add node: MDDNode(1,u_16) MDDNode(1,u_17), remove node: MDDNode(1,u_7)
2 2 4
layer 2 incoming edges: 240
split the incoming edges: 240 106 134
the value pair of raw_data is: 6265
split the outgoings edges: 88 84 86 170
add node: MDDNode(2,u_18) MDDNode(2,u_19), remove node: MDDNode(2,u_8)
layer 2 incoming edges: 229
split the incoming edges: 229 109 120
the value pair of raw_data is: 6265
split the outgoings edges: 88 84 88 172
add node: MDDNode(2,u_20) MDDNode(2,u_21), remove node: MDDNode(2,u_9)
3 2 4
layer 3 incoming edges: 159
split the incoming edges: 159 82 77
the value pair of raw_data is: 202
split the outgoings edges: 115 95 83 178
add node: MDDNode(3,u_22) MDDNode(3,u_23), remove node: MDDNode(3,u_10)
layer 3 incoming edges: 183
split the incoming edges: 183 86 97
the value pair of raw_data is: 202
split the outgoings edges: 140 121 124 245
add node: MDDNode(3,u_24) MDDNode(3,u_25), remove node: MDDNode(3,u_11)
4 2 4
layer 4 incoming edges: 246
split the incoming edges: 246 115 131
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_26) MDDNode(4,u_27), remove node: MDDNode(4,u_12)
layer 4 incoming edges: 177
split the incoming edges: 177 91 86
the value pair of raw_data is: 161
split the outgoings edges: 1 1 1 2
add node: MDDNode(4,u_28) MDDNode(4,u_29), remove node: MDDNode(4,u_13)
The bucket size: [25]
the graph width list : [1, 4, 4, 4, 4, 1]
iter= 1 dev 0.2308   test 0.2298   intelligible 0.2985   english 0.2439   gold 0.5582   save acc: 0.2985 time: 2019-11-26T23:40 
iter= 2 dev 0.2749   test 0.2530   intelligible 0.3311   english 0.2728   gold 0.5719   save acc: 0.3311 time: 2019-11-26T23:41 
iter= 3 dev 0.2682   test 0.2644   intelligible 0.3417   english 0.2799   gold 0.5856   save acc: 0.3417 time: 2019-11-26T23:42 
iter= 4 dev 0.2820   test 0.2740   intelligible 0.3530   english 0.2897   gold 0.6250   save acc: 0.3530 time: 2019-11-26T23:43 
iter= 5 dev 0.2844   test 0.2745   intelligible 0.3591   english 0.2945   gold 0.6404   save acc: 0.3591 time: 2019-11-26T23:44 
iter= 6 dev 0.2832   test 0.2647   intelligible 0.3511   english 0.2867   gold 0.6404   
iter= 7 dev 0.2991   test 0.2828   intelligible 0.3682   english 0.3013   gold 0.6627   save acc: 0.3682 time: 2019-11-26T23:46 
iter= 8 dev 0.2879   test 0.2776   intelligible 0.3633   english 0.2948   gold 0.6507   
iter= 9 dev 0.2931   test 0.2877   intelligible 0.3754   english 0.3067   gold 0.7038   save acc: 0.3754 time: 2019-11-26T23:48 
iter= 10 dev 0.2953   test 0.2833   intelligible 0.3670   english 0.2998   gold 0.6524   
iter= 11 dev 0.2991   test 0.2848   intelligible 0.3697   english 0.3016   gold 0.6575   
iter= 12 dev 0.3007   test 0.2817   intelligible 0.3682   english 0.3013   gold 0.6507   
iter= 13 dev 0.2972   test 0.2866   intelligible 0.3708   english 0.3037   gold 0.6558   
iter= 14 dev 0.2995   test 0.2864   intelligible 0.3746   english 0.3055   gold 0.6473   
iter= 15 dev 0.2972   test 0.2859   intelligible 0.3705   english 0.3037   gold 0.6575   
iter= 16 dev 0.2998   test 0.2825   intelligible 0.3678   english 0.3007   gold 0.6490   
iter= 17 dev 0.2974   test 0.2851   intelligible 0.3705   english 0.3031   gold 0.6490   
iter= 18 dev 0.2957   test 0.2861   intelligible 0.3720   english 0.3046   gold 0.6575   
iter= 19 dev 0.2972   test 0.2846   intelligible 0.3674   english 0.3016   gold 0.6490   
iter= 20 dev 0.2957   test 0.2846   intelligible 0.3686   english 0.3022   gold 0.6507   
iter= 21 dev 0.2964   test 0.2856   intelligible 0.3701   english 0.3037   gold 0.6541   
